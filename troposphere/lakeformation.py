# Copyright (c) 2012-2021, Mark Peek <mark@peek.org>
# All rights reserved.
#
# See LICENSE file for full license.
#
# *** Do not modify - this file is autogenerated ***
# Resource specification version: 51.0.0


from . import AWSObject, AWSProperty
from .validators import boolean


class DataLakePrincipal(AWSProperty):
    """
    `DataLakePrincipal <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lakeformation-permissions-datalakeprincipal.html>`__
    """

    props = {
        "DataLakePrincipalIdentifier": (str, False),
    }


class DataLakeSettings(AWSObject):
    """
    `DataLakeSettings <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html>`__
    """

    resource_type = "AWS::LakeFormation::DataLakeSettings"

    props = {
        "Admins": ([DataLakePrincipal], False),
        "TrustedResourceOwners": ([str], False),
    }


class DataLocationResource(AWSProperty):
    """
    `DataLocationResource <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lakeformation-permissions-datalocationresource.html>`__
    """

    props = {
        "CatalogId": (str, False),
        "S3Resource": (str, False),
    }


class DatabaseResource(AWSProperty):
    """
    `DatabaseResource <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lakeformation-permissions-databaseresource.html>`__
    """

    props = {
        "CatalogId": (str, False),
        "Name": (str, False),
    }


class TableWildcard(AWSProperty):
    """
    `TableWildcard <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lakeformation-permissions-tablewildcard.html>`__
    """

    props = {}


class TableResource(AWSProperty):
    """
    `TableResource <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lakeformation-permissions-tableresource.html>`__
    """

    props = {
        "CatalogId": (str, False),
        "DatabaseName": (str, False),
        "Name": (str, False),
        "TableWildcard": (TableWildcard, False),
    }


class ColumnWildcard(AWSProperty):
    """
    `ColumnWildcard <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lakeformation-permissions-columnwildcard.html>`__
    """

    props = {
        "ExcludedColumnNames": ([str], False),
    }


class TableWithColumnsResource(AWSProperty):
    """
    `TableWithColumnsResource <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lakeformation-permissions-tablewithcolumnsresource.html>`__
    """

    props = {
        "CatalogId": (str, False),
        "ColumnNames": ([str], False),
        "ColumnWildcard": (ColumnWildcard, False),
        "DatabaseName": (str, False),
        "Name": (str, False),
    }


class ResourceProperty(AWSProperty):
    """
    `ResourceProperty <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lakeformation-permissions-resource.html>`__
    """

    props = {
        "DataLocationResource": (DataLocationResource, False),
        "DatabaseResource": (DatabaseResource, False),
        "TableResource": (TableResource, False),
        "TableWithColumnsResource": (TableWithColumnsResource, False),
    }


class Permissions(AWSObject):
    """
    `Permissions <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-permissions.html>`__
    """

    resource_type = "AWS::LakeFormation::Permissions"

    props = {
        "DataLakePrincipal": (DataLakePrincipal, True),
        "Permissions": ([str], False),
        "PermissionsWithGrantOption": ([str], False),
        "Resource": (ResourceProperty, True),
    }


class Resource(AWSObject):
    """
    `Resource <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-resource.html>`__
    """

    resource_type = "AWS::LakeFormation::Resource"

    props = {
        "ResourceArn": (str, True),
        "RoleArn": (str, False),
        "UseServiceLinkedRole": (boolean, True),
    }
